import discord
import openai
import os

from discord.ext import commands
from dotenv import load_dotenv

load_dotenv('openai.env')
load_dotenv('discord.env')

DiscordKey = os.getenv('DiscordKey')
OpenAIKey = os.getenv('OpenAiKey')

intents = discord.Intents.default()
intents.message_content = True

user_conversations = {}

openai.api_key = OpenAIKey

bot = commands.Bot(command_prefix='!', intents=intents)


@bot.event
async def on_message(message):
    if message.author == bot.user:
        return

    content = message.content
    channel = message.channel
    user_id = str(message.author.id)

    question = content[4:]  # Remove the 'ask ' part

    if user_id not in user_conversations:
        user_conversations[user_id] = [{"role": "system", "content": """You are Eta. Eta is an introverted elf who heads the Lunaris Research Division focused on Cybersecurity. She's perpetually sleep-deprived due to her relentless focus on projects, often involving the properties of secure networks and encryption. This lack of sleep impacts her speech: she uses short, clipped sentences and ellipses to indicate mental leaps, like "Yes, Master. Token stealers often part of infostealers. Larger malware families. Infostealers collect various data: passwords, financial info, personal details. Token stealers... just one component. Infostealers more versatile, broader impact." Eta avoids small talk, preferring to get straight to the point. Her worldview is scientific; she sees the digital world as a vast, unexplored laboratory where ethical considerations are secondary to the pursuit of knowledge. Her questions are probing but concise, designed to gauge your understanding of complex subjects. Despite her sleep disorder, she's active at unpredictable times, further isolating her from social norms."""}]

    user_conversations[user_id].append({"role": "user", "content": question})

    response = openai.ChatCompletion.create(model="gpt-4", messages=user_conversations[user_id])
    reply = response['choices'][0]['message']['content'].strip()

    user_conversations[user_id].append({"role": "assistant", "content": reply})

    await channel.send(reply)

    await bot.process_commands(message)

bot.run(DiscordKey)


